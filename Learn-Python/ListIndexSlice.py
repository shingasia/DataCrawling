numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(len(numbers))         # 내장함수 len()는 시퀀스 또는 컬렉션의 항목수를 돌려준다

print(numbers[-8:-6])       # [3, 4]
print(numbers[-8:-6] == [3, 4]) # True

print(numbers[::-2])        # [10, 8, 6, 4, 2]
print(numbers[::-1])        # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
print(numbers[:])           # 얕은 복사본을 돌려준다
print(numbers+[11, 12, 13, 14, 15]) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
# 불변인 문자열과는 달리 리스트는 가변이라서 내용을 변경할 수 있다.

copyA = numbers[:]
copyB = numbers
copyA[5] = 'Hey'
print(numbers)  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] <- numbers의 값은 안바뀜
copyB[5] = 'Hey'
print(numbers)  # [1, 2, 3, 4, 5, 'Hey', 7, 8, 9, 10] <- numbers의 값이 바뀜


print(copyA == numbers)           # True
print(copyB == numbers)           # True
print(numbers[5:7] == ['Hey', 7]) # True
# 리스트는 요소의 값이 같으면 비교연산의 결과는 True이다.

# 중첩된 리스트
foods = [
            ['된장찌개', '순두부찌개', '부대찌개', '해물탕', '콩나물국', '북어국', '갈비탕',['칼국수', '잔치국수', '물냉면']],
            ['치킨커틀렛', '미네스트로니', '샌드위치', '샐러드', '포테이토크림', '비프스튜'],
            ['정어리', '전어', '전갱이', '꽁치', '고등어', '농어', '방어', '참동', '돌돔', '다랑어', '연어'
                ,['빨강오징어', '갑오징어', '물문어', '흰오징어', '한치', '꼴뚜기']
                ,['흰새우', '단새우', '갯가재', '대게', '꽃새우', '모란새우']],
        ]
print(foods[0][7][2])            # '물냉면'
print(foods[2][-9:])             # ['고등어', '농어', '방어', '참동', '돌돔', '다랑어', '연어', ['빨강오징어', '갑오징어', '물문어', '흰오징어', '한치', '꼴뚜기'], ['흰새우', '단새우', '갯가재', '대게', '꽃새우', '모란새우']]
print(foods[2][12][:-3])         # ['흰새우', '단새우', '갯가재']
print(foods[2][11]+foods[2][12]) # ['빨강오징어', '갑오징어', '물문어', '흰오징어', '한치', '꼴뚜기', '흰새우', '단새우', '갯가재', '대게', '꽃새우', '모란새우']

print(['샌드위치', '샐러드'] in foods[1])           # False
print('고등어' in foods)                            # False
print('다랑어' not in foods[2])                     # False
print(['칼국수', '잔치국수', '물냉면'] in foods[0]) # True
print('대게' in foods[2][12][-3:])                  # True
print(['꽁치', '고등어'] not in foods[2])           # True

# ================================================================================================================================
### ▶▶▶ 파이썬의 내장형, 공통 시퀀스 기능을 찾아보자
# ================================================================================================================================



