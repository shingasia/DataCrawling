# 숫자 int, float, complex(복소수)

print(int('100'))
print(float('-123.45678901232'))
print(100/5) #나눗셈(/)은 항상 float를 돌려준다
print(99//7) #정수 결과를 얻고 나머지를 버리려면 // 연산자

print(5**(-3)) # 0.008
print(2**(1/2)) # 1.4142135623730951
print((-4)**(1/2)) # (1.2246467991473532e-16+2j) complex 타입
print( (-31.893-11.32J) ** (20.3249+12.000343J)) # (-2.3931450071370883e+45-4.1653526810912076e+45j)
print( (9.023342123-1.43E-12J) + (-8.125453+7.0006E-20J)) # (0.8978891230000006-1.4299999299939999e-12j)
print( (-10.5+7.5j) - (-7+2J) ) # (-3.5+5.5j)
print( (-19.457+6.38J) - (-11.798-10.0076J)) # (-7.659000000000001+16.3876j)
print( (3.0874+111E-8J).real, (3.0874+111E-8J).imag, (3.0874+111E-8J).conjugate()) # 3.0874 1.11e-06 (3.0874-1.11e-06j)

print(0b1000101, 0B01010111) # 69 87
print(0o054262, 0O531123)    # 22706 176723
print(0x0012FF7C, 0XEE953CB) # 1245052 250172363

print(118.645832, 10., .0001, 3e102, 152e-10, 0e0, 10.6843E-15, 18.42_343_1E+1_31) # 118.645832 10.0 0.0001 3e+102 1.52e-08 0.0 1.06843e-14 1.8423431e+132
# ============================================================================================================
# 밑줄은 리터럴의 숫자 값을 결정할 때 고려되지 않습니다. 가독성을 높이기 위해 숫자들을 무리 지을 때 쓸모가 있습니다.
# 밑줄은 숫자 사이나 0x 와 같은 진수 지정자(base specifier) 다음에 나올 수 있는데, 한 번에 하나만 사용될 수 있습니다.
# 0 이 아닌 10진수가 0으로 시작할 수 없음에 주의
# ============================================================================================================



# 문자열 
data = "First Line \n Hello.....\rSecond Line..."
print(data)

data = """The START TRANSACTION or BEGIN statement begins a new transaction. 
COMMIT commits the current transaction, making its changes permanent. 
ROLLBACK rolls back the current transaction, canceling its changes. 
The SET autocommit statement disables or enables the default autocommit mode for the current session.
"""
print(data) # ''' 또는 """ 로 감싸면 여러줄 문자열을 만들 수 있다

#=========================== 문자열/바이트열 리터럴
# ▶ 파이썬은 기본 인코딩이 UTF-8이다.

# 문자열 리터럴의 접두사(prefix)
# "r" | "u" | "R" | "U" | "f" | "F" | "fr" | "Fr" | "fR" | "FR" | "rf" | "rF" | "Rf" | "RF"

# 바이트열 리터럴의 접두사(prefix)
# "b" | "B" | "br" | "Br" | "bR" | "BR" | "rb" | "rB" | "Rb" | "RB"

# ============================================================================================================
# 두 종류 리터럴 모두 작은따옴표('), 큰따옴표("), 삼중 작은따옴표나 큰따옴표로 둘러싸일 수 있는데 
# 바이트열 리터럴은 항상 'b'나 'B'를 앞에 붙여야하고, 문자열 리터럴은 선택적으로 'r'이나 'R'문자를 붙일 수 있다.
# 'r'이나 'R'을 붙이면 날 문자열(raw strings), 'f'나  'F'를 붙이면 포맷 문자열 리터럴이다.
# ============================================================================================================







